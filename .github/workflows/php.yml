name: PHP Composer

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  statuses: write
  checks: write
  contents: read
  pull-requests: write

env:
  AZURE_WEBAPP_NAME: devOpsTest    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  PHP_VERSION: '8.2'  

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP Action
      uses: shivammathur/setup-php@2.31.0
      with:
        php-version: '8.2'
    
    - name: Setup Java JDK
      uses: actions/setup-java@v4.2.1
      with:
        distribution: 'zulu' # See 'Supported distributions' for available options
        java-version: '21'

    - name: Check Java version
      run: java -version

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run test suite
      run: composer run-script test
      
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/linux@v2
      if: always()
      with:
        files: |
          tests/phpunit.xml
          tests/phpunit.trx
          tests/phpunit.json      
    
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=Ka-2000_DevOpsTest
          -Dsonar.organization=ka-2000

    - name: Set up dependency caching for faster installs
      uses: actions/cache@v3
      if: steps.check_files.outputs.files_exists == 'true'
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
            
    - name: Run composer install if composer.json exists
      if: steps.check_files.outputs.files_exists == 'true'
      run: composer validate --no-check-publish && composer install --prefer-dist --no-progress
    
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: php-app
        path: .
    
  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'AzureDevelopment'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: php-app

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .



        
